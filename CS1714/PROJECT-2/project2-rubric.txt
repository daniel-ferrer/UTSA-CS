[3 points] - route-records.h
	[1 point] - header guard
	[1 point] - enum and struct
	[1 point] - function prototypes
	
[5 points] - createRecords()
	[1 point] - Traverses the CSV file and counts the number of lines
	[1 point] - Rewinds the file pointer
	[1 point] - Dynamically allocates memory for the array of RouteRecords based on the number of lines counted
	[1 point] - Initializes the passenger data array within each RouteRecord struct object
	[1 point] - Returns the pointer to the array
  	
[6 points] - fillRecords()
	[1 point] - Traverses the CSV file skipping the header row
	[1 point] - Calls findAirlineRoute() to see if route operated by airline already exists in the array
	[1 point] - If found, updates an existing route operated by an airline in the array with the new month's passenger data
	[1 point] - If not found, adds the new route operated by an airline into the array
	[2 points] - Returns the unique number of routes as operated by different airlines. This will be the number of items in the array that are actually used. 

[8 points] - findAirlineRoute()
	[6 points] - Recursuve function set up to find the airline route by checking if there a struct object that matches the origin, destination, and airline
	[1 point] - Returns the index of the array in which it was found
	[1 point] - Returns -1 if not found

[8 points] - searchRecords()
	[1 point] - Traverses the array
	[1 point] - Determines the search type and compares key(s) against appropriate data members
	[2 points] - Prints all matching information AirlineCode (Origin-Destination)
	[4 points] - Calculates and prints out total passengers, total passengers per month, and average

[2 points] - printRecords()
	[2 points] - Function to print each record in a proper readable format
	
[1 point] - printMenu()
	[1 point] - printMenu() function was copied and pasted into the source file
	
[8 points] - main.c
	[1 point] - Processes command-line argument for input file name
	[1 point] - Open files and checks for success in opening
	[2 points] - Sets up the array of RouteRecords
	[2 points] - Processes user input, handling bad input
	[2 points] - asks user for search keys and calls appropriate functions for desired functionality
	
[3 points] - makefile
	[3 points] - make compiles and creates the executable

[6 points] – General Requirements
	[2 points] – coding style - proper comments, indentation
	[2 points] – correctness – compiles properly and gives correct output
	[2 points] – submission – no missing files, zip, properly submitted